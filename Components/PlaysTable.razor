@using MagicDeckStats.Models
@using MagicDeckStats.Services

@if (Plays == null || !Plays.Any())
{
    <div class="alert alert-info">
        <i class="bi bi-info-circle"></i> No plays data available. Count: @(Plays?.Count ?? 0)
    </div>
}
else
{
    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Duration</th>
                    <th class="flag-icon-column"></th>
                    <th>Winner</th>
                    <th>First Player</th>
                    <th class="flag-icon-column"></th>
                    <th>Loser</th>
                    <th>Second Player</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var play in Plays)
                {
                    var winner = play.PlayerScores.FirstOrDefault(p => p.IsWinner);
                    var loser = play.PlayerScores.FirstOrDefault(p => !p.IsWinner);
                    
                    <tr>
                        <td>@DateTime.Parse(play.Date).ToString("yyyy-MM-dd")</td>
                        <td>@(play.DurationInMinutes > 0 ? $"{play.DurationInMinutes} min" : "-")</td>
                        <td class="flag-icon-column">
                            @if (winner?.IsFirstPlayer == true)
                            {
                                <i class="bi bi-flag-fill text-warning" title="First Player"></i>
                            }
                        </td>
                        <td>
                            @if (!string.IsNullOrWhiteSpace(winner?.Deck))
                            {
                                <NavLink class="deck-link text-success fw-bold" href="@Utilities.GetDeckUrl(winner.Deck)">@winner.Deck</NavLink>
                            }
                        </td>
                        <td>
                            @if (winner != null)
                            {
                                <span class="text-success">@winner.PlayerName</span>
                            }
                            else
                            {
                                <span class="text-muted">No winner</span>
                            }
                        </td>
                        <td class="flag-icon-column">
                            @if (loser?.IsFirstPlayer == true)
                            {
                                <i class="bi bi-flag-fill text-warning" title="First Player"></i>
                            }
                        </td>
                        <td>
                            @if (!string.IsNullOrWhiteSpace(loser?.Deck))
                            {
                                <NavLink class="deck-link text-danger fw-bold" href="@Utilities.GetDeckUrl(loser.Deck)">@loser.Deck</NavLink>
                            }
                        </td>
                        <td>
                            @if (loser != null)
                            {
                                <span class="text-danger">@loser.PlayerName</span>
                            }
                            else
                            {
                                <span class="text-muted">No loser</span>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    [Parameter]
    public List<Play> Plays { get; set; } = new();
} 